fn main() {}

fn find_table(l: char, r: char) -> char {
    let table: [[char;9]; 9] =

        // match  +    -    *    /    ^    !    (    )    #
[
        /* + */ ['>', '>', '<', '<', '<', '<', '<', '>', '>'],
        /* - */ ['>', '>', '<', '<', '<', '<', '<', '>', '>'],
        /* * */ ['>', '>', '>', '>', '<', '<', '<', '>', '>'],
        /* / */ ['>', '>', '>', '>', '<', '<', '<', '>', '>'],
        /* ^ */ ['>', '>', '>', '>', '>', '<', '<', '>', '>'],
        /* ! */ ['>', '>', '>', '>', '>', '>', ' ', '>', '>'],
        /* ( */ ['<', '<', '<', '<', '<', '<', '<', '=', ' '],
        /* ) */ [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],
        /* # */ ['<', '<', '<', '<', '<', '<', '<', ' ', '='],
];

    let i = get_order(l);
    let j = get_order(r);

    table[i][j]
}

fn get_order(ch: char) -> usize {
    match ch {
        '+' => 0,
        '-' => 1,
        '*' => 2,
        '/' => 3,
        '^' => 4,
        '!' => 5,
        '(' => 6,
        ')' => 7,
        '#' => 8,
        _ => panic!(),
    }
}
